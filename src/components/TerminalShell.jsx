import { useEffect, useState, useRef } from "react";
import CRTSweep from "./CRTSweep.jsx";
import useGeoLocation from "../hooks/useGeoLocation";
import instructionsRaw from "../data/instructions.json";
import locations from "../data/locations.json";

const TRACKS = [
  "/audio/huburnulation.mp3",
  "/audio/ultrafiliation.mp3",
  "/audio/surespirable.mp3",
  "/audio/resistransition.mp3",
  "/audio/resistransition.mp3",
  "/audio/predisparadis.mp3",
];

const ORCA = `
..1V02V034V05V06V0....4..........................................................................................................................
....0..1.................6..D1...................................................................................................................
....2..0..3.................*$CC:0...............................................................................................................
...50..0..0..00..0...............................................................................................................................
....0..0..02.02..1...............................................................................................................................
....0..0..0..0........4..K4..........K4..........K4..................K4........K5.......K6......K2.......K4......K5..............................
....0..0..0..0............0F1.........0F2.........0F3..............D1.0M5....D1.0M5...D1.0M5..D1.0M5...D1.0M5..D1.0M5............................
....0..0..0..0....................0................................*!000.....*!010....*!020...*!030....*!040...*!060.............................
....0..0..0..0.............:01A........:02B........:05C..........................................................................................
....7..7..9......................................................................................................................................
....0..0..02.11..0..........3....................................................................................................................
....1..2..0..0...........K5..........K5..........K5..............................................................................................
....0..0..0...........0...0F1.........0F2.........0F3............................................................................................
....0..3..3..0...............R9..........aRZ.....................................................................................................
....2..3..6..0.............:02A........:04N........:05C..........................................................................................
....0..0..0..0..................................................................2K45.V4...............2K45.V5..................2K45.V6...........
....3..3..6.......................................................................00X0..................00X0.....................00X0............
....5..7..9..............K6..........K6..........K6.................................01234567..............00000000.................00122465......
....2..2..4...............0F3.........0F3.........0F3...............................01234567..............11111111.................00115301......
....3..7..9.........................................................................01234567..............22222222.................11121265......
....2..5..8..0.............:07A........:06B........:01C.............................01234567..............33333333.................20052113......
....7..1..8.........................................................................01234567..............44444444.................31056320......
....0..3..3..0......................................................................01234567..............55555555.................20512123......
....5..6..9...2K45.V4...............2K45.V5..................2K45.V6................01234567..............66666666.................40312040......
....5..0..4.....00X0..................00X0.....................00X0.................01234567..............77777777.................53150331......
....2..2..4.......01234567..............00000000.................00122465........................................................................
....5..6..9.......01234567..............11111111.................00115301........................................................................
....6..3..9.......01234567..............22222222.................11121265.......2K45.V4...............2K45.V5..................2K45.V6...........
....3..2..4.......01234567..............33333333.................20052113.........00X0..................00X0.....................00X0............
....1..3..1.......01234567..............44444444.................31056320...........01234567..............00000000.................00122465......
....4..2..6......001234567..............55555555.................20512123...........01234567..............11111111.................00115301......
....5..5..0.......01234567..............66666666.................40312040...........01234567..............22222222.................11121265......
....7..6..9.......01234567..............77777777.................53150331...........01234567..............33333333.................20052113......
....4..3..7.........................................................................01234567..............44444444.................31056320......
....7..4..9.........................................................................01234567..............55555555.................20512123......
....2..0..2.........................................................................01234567..............66666666.................40312040......
....7..5..9...2K45.V4...............2K45.V5..................2K45.V6................01234567..............77777777.................53150331......
....7..1..8.....00X0..................00X0.....................00X0..............................................................................
....4..2..2.......01234567..............00000000.................00122465........................................................................
....6..4..4.......01234567..............11111111.................00115301.......2K45.V4...............2K45.V5..................2K45.V6...........
....2..7..9.......01234567..............22222222.................11121265.........00X0..................00X0.....................00X0............
....6..7..9.......01234567..............33333333.................20052113...........01234567..............00000000.................00122465......
....7..4..9.......01234567..............44444444.................31056320...........01234567..............11111111.................00115301......
....4..5..2.......01234567..............55555555.................20512123...........01234567..............22222222.................11121265......
....5..4..9.......01234567..............66666666.................40312040...........01234567..............33333333.................20052113......
....6..2..4.......01234567..............77777777.................53150331...........01234567..............44444444.................31056320......
....5..4..4.........................................................................01234567..............55555555.................20512123......
....5..7..9.........................................................................01234567..............66666666.................40312040......
....2..0..4.........................................................................01234567..............77777777.................53150331......
....4..6.........................................................................................................................................
`;
export default function TerminalShell() {
  const { lat, lon, label, method } = useGeoLocation();
  const [history, setHistory] = useState([]);
  const inputRef = useRef(null);
  const audioRef = useRef(null);
  const [randomInstruction, setRandomInstruction] = useState("");
  const [locationStatus, setLocationStatus] = useState("loading"); // 'loading', 'ready'
  const [musicIndex, setMusicIndex] = useState(null);
  const [instructionIndex, setInstructionIndex] = useState(null);

  const [showMap, setShowMap] = useState(false);
  const [centerOnUser, setCenterOnUser] = useState(false);

  const isFrench =
    typeof navigator !== "undefined" &&
    navigator.language?.toLowerCase().startsWith("fr");

  const instructions = instructionsRaw
    .filter((item) => item.lang === (isFrench ? "fr" : "en"))
    .map((item) => `${item.id}. ${item.title}\n* ${item.steps.join("\n* ")}`);

  const handleCommand = (e) => {
    if (e.key === "Enter") {
      const cmd = e.target.value.trim().toLowerCase();
      let response = "";

      switch (cmd) {
        case "help":
          response =
            "Available commands: help, play, pause, map, locate, orca, ac-nola, floxpox, clear";
          break;
        case "floxpox":
          response = "https://websim.com/@HyperTransit/esoteric-terminal/7";
          break;
        case "play":
          audioRef.current?.play();
          response = "▶ Playing audio...";
          break;
        case "pause":
          audioRef.current?.pause();
          response = "⏸ Audio paused.";
          break;
        case "orca":
          audioRef.current?.pause();
          response = ORCA;
          break;
        case "ac-nola":
          audioRef.current?.pause();
          response = "Gallery inconming soon!";
          break;
        case "map":
          response = Object.entries(locations)
            .map(([city, coords]) => {
              const lines = coords.map(
                ([lat, lon]) => `${lat.toFixed(4)}, ${lon.toFixed(4)}`
              );
              return `[${city}]\n` + lines.join("\n");
            })
            .join("\n\n");
          break;

        case "locate":
          if (!lat || !lon) {
            response = "⏳ Location not ready.";
            break;
          }

          let closestCity = null;
          let closestPoint = null;
          let minDistance = Infinity;

          for (const [city, coords] of Object.entries(locations)) {
            for (const [clat, clon] of coords) {
              const dist = Math.sqrt(
                Math.pow(clat - lat, 2) + Math.pow(clon - lon, 2)
              );

              if (dist < minDistance) {
                minDistance = dist;
                closestCity = city;
                closestPoint = [clat, clon];
              }
            }
          }

          if (closestCity && closestPoint) {
            response = `[${closestCity}]\n${closestPoint[0]}, ${closestPoint[1]}`;
          } else {
            response = "❌ No locations available.";
          }
          break;

        case "clear":
          setHistory([]);
          e.target.value = "";
          return;
        default:
          response = `Command not found: ${cmd}`;
      }

      setHistory((prev) => [...prev, `> ${cmd}`, response]);
      e.target.value = "";
    }
  };

  useEffect(() => {
    inputRef.current?.focus();
  }, []);

  useEffect(() => {
    const pick = instructions[Math.floor(Math.random() * instructions.length)];
    setRandomInstruction(pick);
  }, []);

  useEffect(() => {
    const timer = setTimeout(() => {
      setLocationStatus("ready");
    }, 3000);
    return () => clearTimeout(timer);
  }, [label, method]);

  useEffect(() => {
    const today = new Date().toISOString().slice(0, 10); // ex: '2025-06-20'
    const saved = JSON.parse(localStorage.getItem("dailySeed"));

    if (saved && saved.date === today) {
      setInstructionIndex(saved.instructionIndex);
      setMusicIndex(saved.musicIndex);
    } else {
      const newInstruction = Math.floor(Math.random() * instructions.length);
      const newMusic = Math.floor(Math.random() * TRACKS.length);

      localStorage.setItem(
        "dailySeed",
        JSON.stringify({
          date: today,
          instructionIndex: newInstruction,
          musicIndex: newMusic,
        })
      );

      setInstructionIndex(newInstruction);
      setMusicIndex(newMusic);
    }
  }, []);

  return (
    <div className="term-o-rama">
      {/* <div className="title">Activate Cities</div> */}
      <img src="/title_ascii.png" className="img_title"></img>
      <div className="central-row">
        <img src="/qr/uptonpark.png" alt="QR code" className="qr-code" />
        <div className="loading-text">
          {locationStatus === "loading" ? (
            <>
              Loading location<span className="dots"></span>
            </>
          ) : (
            <>
              📍 Location: {label || "Unknown"} ({method})
            </>
          )}
        </div>
      </div>

      <div className="random-instruction">
        {instructionIndex !== null && instructions[instructionIndex]}
      </div>

      {history.map((line, idx) => (
        <div key={idx} className="output-line">
          {line}
        </div>
      ))}

      <input
        ref={inputRef}
        type="text"
        className="cli"
        placeholder="> type play to start music or help for commands"
        onKeyDown={handleCommand}
      />

      {musicIndex !== null && (
        <audio autoPlay loop hidden ref={audioRef}>
          <source src={TRACKS[musicIndex]} type="audio/mp3" />
        </audio>
      )}

      <CRTSweep />
    </div>
  );
}
